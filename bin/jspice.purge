#!/usr/bin/python
#############################################################
#             /######            /##                        #
#            /##__  ##          |__/                        #
#        /##| ##  \__/  /######  /##  /#######  /######     #
#       |__/|  ######  /##__  ##| ## /##_____/ /##__  ##    #
#        /## \____  ##| ##  \ ##| ##| ##      | ########    #
#       | ## /##  \ ##| ##  | ##| ##| ##      | ##_____/    #
#       | ##|  ######/| #######/| ##|  #######|  #######    #
#       | ## \______/ | ##____/ |__/ \_______/ \_______/    #
#  /##  | ##          | ##                                  #
# |  ######/          | ##                                  #
#  \______/           |__/                                  #
#							    #
#                 Jorge I. Zuluaga (C) 2016		    #
#############################################################
# Function: jSpice session
#############################################################

#############################################################
#HEADER
#############################################################
print "Content-Type: text/html\n\n";

#############################################################
#EXTERNAL MODULES
#############################################################
import sys,os,inspect
PATH=os.path.realpath(
    os.path.abspath(os.path.split(
        inspect.getfile(
            inspect.currentframe()))[0]))
DIR=PATH+"/../"
sys.path.insert(0,DIR+"/bin")

from jspice import *
from jspice.spicext import *

#############################################################
#LOG FILE
#############################################################
flog=open(DIR+"/log/purge.log","a")

purgefile="%s/.purging"%DIR
if os.path.isfile(purgefile):
    print "Purging is ongoing"
    exit(1)
os.system("echo %s > %s"%(os.getpid(),purgefile))

#############################################################
#CANCEL BEHAVIOR
#############################################################
def sigHandler(signal,frame):
    import sys,os
    os.system("rm %s/.purging"%DIR)
    sys.exit(0)
for sig in SIGNALS:signal.signal(sig,sigHandler)

#############################################################
#READ CONFIGURATION FILE
#############################################################
loadConf(DIR+"/jspice.cfg")

#############################################################
#CGI PARAMETERS
#############################################################
params=cgi.FieldStorage();

#############################################################
#TEST HEALTH
#############################################################
timeout=CONF["session_timeout"]*60
while True:
    results=sqlExec("select * from sessions",DIR+"/sessions.db")
    for row in results:
        # Get session information
        sessionid,port,timestart,pid,proxy,client=row
        print "Session information:",sessionid,port,timestart,pid,proxy,client
        if str(sessionid)=="0":continue
        logEntry(flog,"Checking session %s..."%sessionid)

        # Get time of last update
        sessdir="%s/sessions/%s"%(DIR,sessionid)
        tfile=os.path.getctime(sessdir+"/session.log")
        
        # Time now
        tnow=getTime()

        # Age of session
        sessage=tnow-tfile
        sessage_min=sessage/60.0
        logEntry(flog,"Session %s has been running by %.2f minutes..."%(sessionid,sessage_min))

        # If session timeout exit
        if sessage>timeout:
            logEntry(flog,"Stopping session %s"%sessionid)
            os.system("kill %s"%pid)

        if not os.path.isfile(purgefile):
            logEntry(flog,"Purging stopped")
            exit(1)

    time.sleep(0.5*timeout)
